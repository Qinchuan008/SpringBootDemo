{"ast":null,"code":"export default {\n  data() {\n    return {\n      students: [],\n      // 学生列表数据\n      total: 0,\n      // 总记录数\n      currentPage: 1,\n      // 当前页码\n      pageSize: 10,\n      // 每页显示条数\n\n      // 添加/编辑学生对话框相关\n      dialogVisible: false,\n      dialogTitle: \"\",\n      // 对话框标题\n      editForm: {\n        id: null,\n        name: \"\",\n        age: null,\n        grade: \"\",\n        clazz: \"\"\n      },\n      editFormRules: {\n        // 根据需要添加表单验证规则\n      }\n    };\n  },\n  methods: {\n    // 加载学生数据\n    loadStudents() {\n      this.$axios.get(\"/students\").then(response => {\n        this.students = response.data;\n      });\n    },\n    // 显示添加学生对话框\n    showAddDialog() {\n      this.dialogTitle = \"添加学生\";\n      this.dialogVisible = true;\n    },\n    // 显示编辑学生对话框\n    handleEdit(row) {\n      this.dialogTitle = \"编辑学生\";\n      this.editForm = Object.assign({}, row); // 使用 Object.assign 避免直接修改原数据\n      this.dialogVisible = true;\n    },\n    // 保存学生信息（包括添加和编辑）\n    handleSave() {\n      // 根据实际情况，发送请求保存学生信息\n      // 若是添加操作，发送 POST 请求，携带 this.editForm\n      // 若是编辑操作，发送 POST 请求，携带 this.editForm.id 和 this.editForm\n      // 成功后关闭对话框，并重新加载学生列表\n      // 例如：\n      // if (this.editForm.id) {\n      //   this.$axios.post('/update', this.editForm).then(() => {\n      //     this.dialogVisible = false;\n      //     this.loadStudents();\n      //   });\n      // } else {\n      //   this.$axios.post('/add', this.editForm).then(() => {\n      //     this.dialogVisible = false;\n      //     this.loadStudents();\n      //   });\n      // }\n    },\n    // 删除学生\n    handleDelete(row) {\n      // 根据实际情况，发送请求删除学生信息\n      // 例如：\n      // this.$axios.post('/delete', { id: row.id }).then(() => {\n      //   this.loadStudents();\n      // });\n    },\n    // 分页改变\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.loadStudents();\n    },\n    // 重置表单\n    resetForm() {\n      this.$refs.editForm.resetFields();\n    }\n  },\n  mounted() {\n    // 页面加载时加载学生数据\n    this.loadStudents();\n  }\n};","map":{"version":3,"names":["data","students","total","currentPage","pageSize","dialogVisible","dialogTitle","editForm","id","name","age","grade","clazz","editFormRules","methods","loadStudents","$axios","get","then","response","showAddDialog","handleEdit","row","Object","assign","handleSave","handleDelete","handlePageChange","page","resetForm","$refs","resetFields","mounted"],"sources":["src/components/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>学生管理系统</h2>\r\n\r\n    <!-- 添加学生按钮 -->\r\n    <el-button type=\"primary\" @click=\"showAddDialog\">添加学生</el-button>\r\n\r\n    <!-- 学生列表 -->\r\n    <el-table :data=\"students\" style=\"width: 100%\" stripe>\r\n      <el-table-column prop=\"id\" label=\"ID\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\r\n      <el-table-column prop=\"age\" label=\"年龄\"></el-table-column>\r\n      <el-table-column prop=\"grade\" label=\"年级\"></el-table-column>\r\n      <el-table-column prop=\"clazz\" label=\"班级\"></el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n          <el-button type=\"text\" @click=\"handleDelete(scope.row)\"\r\n            >删除</el-button\r\n          >\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      v-if=\"total > 0\"\r\n      @current-change=\"handlePageChange\"\r\n      :current-page=\"currentPage\"\r\n      :page-sizes=\"[10, 20, 30, 50]\"\r\n      :page-size=\"pageSize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\"\r\n    >\r\n    </el-pagination>\r\n\r\n    <!-- 添加/编辑学生对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"30%\"\r\n      @close=\"resetForm\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        ref=\"editForm\"\r\n        :rules=\"editFormRules\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"editForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\" prop=\"age\">\r\n          <el-input v-model=\"editForm.age\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年级\" prop=\"grade\">\r\n          <el-input v-model=\"editForm.grade\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\" prop=\"clazz\">\r\n          <el-input v-model=\"editForm.clazz\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSave\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      students: [], // 学生列表数据\r\n      total: 0, // 总记录数\r\n      currentPage: 1, // 当前页码\r\n      pageSize: 10, // 每页显示条数\r\n\r\n      // 添加/编辑学生对话框相关\r\n      dialogVisible: false,\r\n      dialogTitle: \"\", // 对话框标题\r\n      editForm: {\r\n        id: null,\r\n        name: \"\",\r\n        age: null,\r\n        grade: \"\",\r\n        clazz: \"\",\r\n      },\r\n      editFormRules: {\r\n        // 根据需要添加表单验证规则\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 加载学生数据\r\n    loadStudents() {\r\n      this.$axios.get(\"/students\").then((response) => {\r\n        this.students = response.data;\r\n      });\r\n    },\r\n\r\n    // 显示添加学生对话框\r\n    showAddDialog() {\r\n      this.dialogTitle = \"添加学生\";\r\n      this.dialogVisible = true;\r\n    },\r\n\r\n    // 显示编辑学生对话框\r\n    handleEdit(row) {\r\n      this.dialogTitle = \"编辑学生\";\r\n      this.editForm = Object.assign({}, row); // 使用 Object.assign 避免直接修改原数据\r\n      this.dialogVisible = true;\r\n    },\r\n\r\n    // 保存学生信息（包括添加和编辑）\r\n    handleSave() {\r\n      // 根据实际情况，发送请求保存学生信息\r\n      // 若是添加操作，发送 POST 请求，携带 this.editForm\r\n      // 若是编辑操作，发送 POST 请求，携带 this.editForm.id 和 this.editForm\r\n      // 成功后关闭对话框，并重新加载学生列表\r\n      // 例如：\r\n      // if (this.editForm.id) {\r\n      //   this.$axios.post('/update', this.editForm).then(() => {\r\n      //     this.dialogVisible = false;\r\n      //     this.loadStudents();\r\n      //   });\r\n      // } else {\r\n      //   this.$axios.post('/add', this.editForm).then(() => {\r\n      //     this.dialogVisible = false;\r\n      //     this.loadStudents();\r\n      //   });\r\n      // }\r\n    },\r\n\r\n    // 删除学生\r\n    handleDelete(row) {\r\n      // 根据实际情况，发送请求删除学生信息\r\n      // 例如：\r\n      // this.$axios.post('/delete', { id: row.id }).then(() => {\r\n      //   this.loadStudents();\r\n      // });\r\n    },\r\n\r\n    // 分页改变\r\n    handlePageChange(page) {\r\n      this.currentPage = page;\r\n      this.loadStudents();\r\n    },\r\n\r\n    // 重置表单\r\n    resetForm() {\r\n      this.$refs.editForm.resetFields();\r\n    },\r\n  },\r\n  mounted() {\r\n    // 页面加载时加载学生数据\r\n    this.loadStudents();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 可以添加一些样式 */\r\n</style>\r\n"],"mappings":"AAwEA;EACAA,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,KAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;;MAEA;MACAC,aAAA;MACAC,WAAA;MAAA;MACAC,QAAA;QACAC,EAAA;QACAC,IAAA;QACAC,GAAA;QACAC,KAAA;QACAC,KAAA;MACA;MACAC,aAAA;QACA;MAAA;IAEA;EACA;EACAC,OAAA;IACA;IACAC,aAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,cAAAC,IAAA,CAAAC,QAAA;QACA,KAAAlB,QAAA,GAAAkB,QAAA,CAAAnB,IAAA;MACA;IACA;IAEA;IACAoB,cAAA;MACA,KAAAd,WAAA;MACA,KAAAD,aAAA;IACA;IAEA;IACAgB,WAAAC,GAAA;MACA,KAAAhB,WAAA;MACA,KAAAC,QAAA,GAAAgB,MAAA,CAAAC,MAAA,KAAAF,GAAA;MACA,KAAAjB,aAAA;IACA;IAEA;IACAoB,WAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;IAEA;IACAC,aAAAJ,GAAA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;IAEA;IACAK,iBAAAC,IAAA;MACA,KAAAzB,WAAA,GAAAyB,IAAA;MACA,KAAAb,YAAA;IACA;IAEA;IACAc,UAAA;MACA,KAAAC,KAAA,CAAAvB,QAAA,CAAAwB,WAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAjB,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}